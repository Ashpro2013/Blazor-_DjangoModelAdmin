@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar bg-primary navbar-expand-md ">
    <div class="container">
        <div class="col-2 text-left pl-md-0">
            <h3 class="text-white"> City Hospital </h3>
        </div>
        <div class="collapse navbar-collapse justify-content-center col-md-8 navbar-collapse-3">
            <ul class="navbar-nav justify-content-center  fw-bold">
                <li class="nav-item active">
                    <NavLink class="nav-link text-white" href="">Home </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="about">About</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="booking">Booking</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="doctor">Doctors</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="department">Departments</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="contact">Contact Us</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="Account/Login">Login</NavLink>
                </li>
            </ul>
        </div>

    </div>
</nav>
@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}