@page "/bookings/details"
@using Microsoft.EntityFrameworkCore
@using DjangoModelAdmin.Model
@using DjangoModelAdmin.Data
@inject ApplicationDbContext context
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Bookings</h2>
    <hr />
    @if (bookings is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">p_name</dt>
            <dd class="col-sm-10">@bookings.p_name</dd>
            <dt class="col-sm-2">p_phone</dt>
            <dd class="col-sm-10">@bookings.p_phone</dd>
            <dt class="col-sm-2">p_email</dt>
            <dd class="col-sm-10">@bookings.p_email</dd>
            <dt class="col-sm-2">booking_date</dt>
            <dd class="col-sm-10">@bookings.booking_date</dd>
            <dt class="col-sm-2">booked_on</dt>
            <dd class="col-sm-10">@bookings.booked_on</dd>
            <dt class="col-sm-2">doc_id</dt>
            <dd class="col-sm-10">@bookings.doc_id</dd>
        </dl>
        <div>
            <a href="@($"/bookings/edit?booking_id={bookings.booking_id}")">Edit</a> |
            <a href="@($"/bookings")">Back to List</a>
        </div>
    }
</div>

@code {
    private Bookings? bookings;

    [SupplyParameterFromQuery]
    private int booking_id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        bookings = await context.Bookings.FirstOrDefaultAsync(m => m.booking_id == booking_id);

        if (bookings is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
